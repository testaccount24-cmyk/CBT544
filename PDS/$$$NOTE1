Subject: PL360 Update & address
Date: Mon, 28 Jan 2002 01:56:56 -0500
From: "Phil Roberts" <opplr@hotmail.com>
To: sbgolob@attglobal.net

Hi Sam,

Here is the info you requested.

Phil Roberts
opplr@hotmail.com (email address)

I have added the compile & go and the compile & link procs along
with the runtime library for PL360 for MVS along with "Magic
Squares" test program for verification.

Below was my post to the Hercules list:

It is ready folks, the procs, PL360C, PL360CG, PL360CL, the load
modules, including the run library, a "Magic Squares" job to submit
and the PL360 source are available at:

http://us.f1.yahoofs.com/users/d89eb3c8/bc/Friends/PL360+for+MVS.zip?
bcCPVp8AhFbNHr2e

Or go here:
http://briefcase.yahoo.com/halfmeg
Click on Friends;
Then download 'PL360 for MVS'

After download and unzip, you can mount APL360.aws on your tape
device, submit IEBCOPYR.jcl to restore the various members and source
file, then submit the PL360JOB.JCL to verify that things are working
correctly. The print file is where you will see the output.

  (The files you see here, came from there....   sbg)

A "Hello World" type program was posted on the MVS group list, but I
kinda like the Magic Squares generator better, 43 lines of code which
generates those numeric cubes which add up to x no matter which way
you add. This program comes from a web site which has posted a
textbook style manual on PL360:

http://lindy.stanford.edu/~guertin/document/pl360txt.html

The plain text manual available in the Hercules archives is from one
of the Stanford PDF files below. Perhaps the next to the last one as
the last revision has some handwritten modifications to the document.

There are 5 technical papers on PL360 on Stanford's FTP server, the
short descriptions and links follow.

(I have pulled the following reports, which have been scanned into
PDF format--in that form, they are too big to include here.   sbg)

Report Number: CS-TR-65-33
Institution: Stanford University, Department of Computer Science
Title: A programming language for the 360 computers
Author: Wirth, Niklaus
Date: December 1965
Abstract: This paper is a prelimary definition of a programming
language which is specifically designed for use on IBM 360 computers,
and is therefore appropriately called PL360.
ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/65/33/CS-TR-65-
33.pdf

Report Number: CS-TR-66-53
Institution: Stanford University, Department of Computer Science
Title: A programming language for the 360 computers
Author: Wirth, Niklaus
Date: December 1966
Abstract: A programming language for the IBM 360 computers and its
implementation are described. The language, called PL360, provides
the facilities of a symbolic machine language, but displays a
structure defined by a recursive syntax. The compiler, consisting of
a precedence syntax analyser and a set of interpretation rules with
strict one-to-one correspondence to the set of syntactic rules
directly reflects the definition of the language. | k-th syntax rule
| k-th interpretation rule | $S_0 ::= S_1 S_2 ... S_n$ | $V_0 := f_k
(V_1 , V_2 , ... , V_n)$ | PL360 was designed to improve the
readability of programs which must take into account specific
characteristics and limitations of a particular computer. It
represents an attempt to further the state of the art of programming
by encouraging and even forcing the programmer to improve his style
of exposition and his principles and discipline in program
organization, and not by merely providing a multitude of "new"
features and facilities. The language is therefore particularly well
suited for tutorial purposes. The attempt to present a computer as a
systematically organized entity is also hoped to be of interest to
designers of future computers.
ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/66/53/CS-TR-66-
53.pdf

Report Number: CS-TR-67-68
Institution: Stanford University, Department of Computer Science
Title: The PL360 system
Author: Wirth, Niklaus
Date: June 1967
Abstract: This report describes the use and the organization of the
operating system which serves as the environment of the PL360
language defined in the companion report, CS 53 [Niklaus Wirth, "A
Programming Language for the 360 Computers," Stanford University
Department of Computer Science, June 1967]. Edited by Niklaus Wirth.
ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/67/68/CS-TR-67-
68.pdf

Report Number: CS-TR-68-91
Institution: Stanford University, Department of Computer Science
Title: The PL360 system
Author: Wirth, Niklaus E.
Author: Wells, Joseph W.
Author: Satterthwaite, Edwin H.
Date: April 1968
Abstract: This report describes the use of two operating systems
which serve as environments for the PL360 language defined in the
companion report [Niklaus Wirth, "A Programming Language for the 360
Computers," Stanford University Computer Science Department report CS
53 (revised), June 1967]. Some additions to that language, not
described in CS 53, are documented in the Appendix.
ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/68/91/CS-TR-68-
91.pdf

Report Number: CS-TR-71-215
Institution: Stanford University, Department of Computer Science
Title: PL360 (revised): a programming language for the IBM 360
Author: Malcolm, Michael A.
Date: May 1972
Abstract: In 1968, N. Wirth (Jan. JACM) published a formal
description of PL360, a programming language designed specifically
for the IBM 360. PL360 has an appearance similar to that of Algol,
but it provides the facilities of a symbolic machine language. Since
1968, numerous extensions and modifications have been made to the
PL360 compiler which was originally designed and implemented by N.
Wirth and J. Wells. Interface and input-output subroutines have been
written which allow the use of PL360 under OS, DOS, MTS and Orvyl. A
formal description of PL360 as it is presently implemented is given.
The description of the language is followed by sections on the use of
PL360 under various operating systems, namely OS, DOS and MTS.
Instructions on how to use the PL360 compiler and PL360 programs in
an interactive mode under the Orvyl time-sharing monitor are also
included.
ftp://reports.stanford.edu/pub/cstr/reports/cs/tr/71/215/CS-TR-71-
215.pdf

